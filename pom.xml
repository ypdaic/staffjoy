<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>xyz.staffjoy</groupId>
    <artifactId>staffjoy-parent</artifactId>
    <packaging>pom</packaging>
    <version>1.0</version>
    <name>Staffjoy MicroServices Training Project</name>
    <url>https://www.staffjoy.xyz</url>
 
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>1.8</java.version>
        <spring.boot.version>2.1.2.RELEASE</spring.boot.version>
        <spring.cloud.version>Greenwich.RELEASE</spring.cloud.version>
    </properties>
 
    <modules>
        <module>common-lib</module>
        <module>account-svc</module>
        <module>account-api</module>
        <module>company-api</module>
        <module>company-svc</module>
        <module>mail-api</module>
        <module>mail-svc</module>
        <module>sms-svc</module>
        <module>sms-api</module>
        <module>bot-api</module>
        <module>bot-svc</module>
        <module>ical-svc</module>
        <module>whoami-api</module>
        <module>whoami-svc</module>
        <module>web-app</module>
        <module>faraday</module>
    </modules>

    <dependencyManagement>
        <dependencies>
            <!-- Spring Boot -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring.boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- Spring Cloud -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring.cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- Swagger -->
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger2</artifactId>
                <version>2.9.2</version>
            </dependency>
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger-ui</artifactId>
                <version>2.9.2</version>
            </dependency>

            <!-- Structured logging -->
            <dependency>
                <groupId>structlog4j</groupId>
                <artifactId>structlog4j-api</artifactId>
                <version>1.0.0</version>
            </dependency>

            <!-- Optional JSON formatter -->
            <dependency>
                <groupId>structlog4j</groupId>
                <artifactId>structlog4j-json</artifactId>
                <version>1.0.0</version>
            </dependency>

            <!-- https://mvnrepository.com/artifact/io.sentry/sentry -->
            <dependency>
                <groupId>io.sentry</groupId>
                <artifactId>sentry</artifactId>
                <version>1.7.17</version>
            </dependency>

            <!-- Common -->
            <dependency>
                <groupId>xyz.staffjoy</groupId>
                <artifactId>common-lib</artifactId>
                <version>1.0.1</version>
            </dependency>

        </dependencies>
    </dependencyManagement>
 
    <dependencies>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>com.vaadin.external.google</groupId>
                    <artifactId>android-json</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
    </dependencies>

    <build>
        <finalName>${project.artifactId}-${project.version}</finalName>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring.boot.version}</version>
                    <configuration>
                        <finalName>${project.build.finalName}</finalName>
                    </configuration>
                    <executions>
                        <execution>
                            <goals>
                                <goal>repackage</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
<!--                <plugin>-->
<!--                    <groupId>io.fabric8</groupId>-->
<!--                    <artifactId>docker-maven-plugin</artifactId>-->
<!--                    <version>0.26.1</version>-->
<!--                    <extensions>true</extensions>-->
<!--                    <configuration>-->
<!--                        <verbose>true</verbose>-->
<!--                        <images>-->
<!--                            <image>-->
<!--                                <name>${project.artifactId}</name>-->
<!--                                <build>-->
<!--                                    <from>java:8-jdk-alpine</from>-->
<!--                                    <entryPoint>-->
<!--                                        <exec>-->
<!--                                            <args>java</args>-->
<!--                                            <args>-jar</args>-->
<!--                                            <args>/maven/${project.build.finalName}.jar</args>-->
<!--                                        </exec>-->
<!--                                    </entryPoint>-->
<!--                                    <assembly>-->
<!--                                        <descriptorRef>artifact</descriptorRef>-->
<!--                                    </assembly>-->
<!--                                </build>-->
<!--                            </image>-->
<!--                        </images>-->

<!--                    </configuration>-->
<!--                    <executions>-->
<!--                        <execution>-->
<!--                            <id>build</id>-->
<!--                            <phase>post-integration-test</phase>-->
<!--                            <goals>-->
<!--                                <goal>build</goal>-->
<!--                            </goals>-->
<!--                        </execution>-->
<!--                    </executions>-->
<!--                </plugin>-->

                <plugin>
                    <groupId>com.spotify</groupId>
                    <artifactId>docker-maven-plugin</artifactId>
                    <version>0.4.13</version>
                    <!--                <executions>-->
                    <!--                    &lt;!&ndash;将build绑定到maven package生命周期&ndash;&gt;-->
                    <!--                    <execution>-->
                    <!--                        <id>build-docker-image</id>-->
                    <!--                        <phase>package</phase>-->
                    <!--                        <goals>-->
                    <!--                            <goal>build</goal>-->
                    <!--                        </goals>-->
                    <!--                    </execution>-->
                    <!--                </executions>-->
                    <configuration>
                        <forceTags>true</forceTags> <!--覆盖相同标签镜像-->
                        <imageName>staffjoy/${project.artifactId}:1.0</imageName> <!--指定镜像名称 仓库/镜像名:标签-->
                        <dockerDirectory>${project.basedir}/src/main/docker</dockerDirectory> <!--dockerfile文件路径-->
                        <!--<skipDockerBuild>false</skipDockerBuild>-->
                        <!--                    <dockerHost>http://192.168.109.128:2375</dockerHost> &lt;!&ndash; 指定仓库地址 &ndash;&gt;-->
                        <!--<dockerCertPath>C:\Users\Administrator\.docker\machine\machines\default</dockerCertPath>-->
                        <resources>
                            <resource>
                                <targetPath>/</targetPath>
                                <!--resources.resource.directory：用于指定需要复制的文件的根目录，-->
                                <!--${project.build.directory}表示target目录。-->
                                <directory>${project.build.directory}</directory>
                                <!--resources.resource.include:用于指定需要复制的文件。-->
                                <!--${project.build.finalName}.jar指的是maven编译打包后的jar包。-->
                                <include>${project.build.finalName}.jar</include>
                            </resource>
                        </resources>
                        <buildArgs>
                            <JAR_FILE>target/${project.build.finalName}.jar</JAR_FILE>
                        </buildArgs>

                        <!-- 必须与maven配置文件settings.xml中配置的server.id一致，镜像名称就必须指定DockerHub的用户名了，私服就指定ip:port -->
                        <!--                    <serverId>docker-hub</serverId>-->
                    </configuration>
                </plugin>

            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.7.0</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <encoding>UTF-8</encoding>
                    <compilerArgs>
                        <arg>-parameters</arg>
                    </compilerArgs>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <repositories>
        <repository>
            <id>aliyun-repos</id>
            <url>http://maven.aliyun.com/nexus/content/groups/public/</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <!--https://github.com/jacek99/structlog4j-->
        <repository>
            <id>jcenter</id>
            <url>http://jcenter.bintray.com</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>aliyun-plugin</id>
            <url>http://maven.aliyun.com/nexus/content/groups/public/</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>
</project>